name: Continuous Integration

on:
  push:
    paths-ignore:
      - '**/*.md'
  pull_request:
    paths-ignore:
      - 'doc/**'
      - 'contrib/**'
      - '**/*.md'

jobs:
  build:
    name: ${{ matrix.name }}

    env:
      MAKEJOBS: "-j3"
      CHECK_DOC: "0"
      CCACHE_SIZE: "100M"
      CCACHE_TEMPDIR: /tmp/.ccache-temp
      CCACHE_COMPRESS: "1"
      PYTHON_DEBUG: "1"
      WINEDEBUG: fixme-all
      SDK_URL: https://bitcoincore.org/depends-sources/sdks

    strategy:
      fail-fast: false
      matrix:
        name:
        - x86_64-linux
        - x86_64-windows
        include:
          - name: x86_64-linux
            host: x86_64-unknown-linux-gnu
            os: ubuntu-18.04
            packages: bc python3-zmq
            dep-opts: "DEBUG=1"
            config-opts: "--enable-gui=qt5 --enable-reduce-exports"
            bdb-args: ""
          - name: x86_64-windows
            host: x86_64-w64-mingw32
            arch: "i386"
            os: ubuntu-20.04
            packages: python3 nsis g++-mingw-w64-x86-64 wine64 bc wine-binfmt
            postinstall: |
              sudo update-alternatives --set x86_64-w64-mingw32-gcc  /usr/bin/x86_64-w64-mingw32-gcc-posix
              sudo update-alternatives --set x86_64-w64-mingw32-g++  /usr/bin/x86_64-w64-mingw32-g++-posix
              sudo update-binfmts --import /usr/share/binfmts/wine
            dep-opts: "DEBUG=1"
            config-opts: "--enable-reduce-exports --enable-gui=qt5 LDFLAGS='-L${BDB_PREFIX}/lib/' CPPFLAGS='-I${BDB_PREFIX}/include/'"
            bdb-args: "--host=x86_64-w64-mingw32 --enable-mingw --disable-replication"

    runs-on: ${{ matrix.os }}

    steps:
      - name: Add architecture
        if: ${{ matrix.arch }}
        run: |
          sudo dpkg --add-architecture "${{ matrix.arch }}"
      - name: Install packages
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libtool autotools-dev automake pkg-config bsdmainutils curl ca-certificates ccache python3 rsync git procps bison
          sudo apt-get install ${{ matrix.packages }}
      - name: Post install
        if: ${{ matrix.postinstall }}
        run: ${{ matrix.postinstall }}

      - name: Checkout
        uses: actions/checkout@v2

      - name: Build depends
        run: |
          make $MAKEJOBS -C depends HOST=${{ matrix.host }} ${{ matrix.dep-opts }}

      - name: Build Berkeley DB and Sircoin
        run: |
          SIR_ROOT=$(pwd)
          BDB_PREFIX="${RAVEN_ROOT}/db4"
          sudo mkdir -p $BDB_PREFIX
          cd db-4.8.30/build_unix/
          ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=$BDB_PREFIX ${matrix.bdb-args}
          make $MAKEJOBS
          make install
          
          cd ..
        
          ./autogen.sh
          ./configure ${{ matrix.config-opts }}
          make $MAKEJOBS
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.name }}
          path: |
            src/qt/litecoin-qt
            src/qt/litecoin-qt.exe
            src/litecoin-cli
            src/litecoin-cli.exe
            src/litecoind
            src/litecoind.exe
            src/litecoin-tx
            src/litecoin-tx.exe
            src/litecoin-wallet
            src/litecoin-wallet.exe
